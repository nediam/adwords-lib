<?php
/*
 * File generated by ClassyFile <https://github.com/onema/classyfile>
 * (c) 2016, Juan Manuel Torres
 *
 * For the full copyright and license information,
 * please view the LICENSE file that was distributed
 * with this source code.
 */
namespace Google\Api\Ads\AdWords\v201603;
use Google\Api\Ads\AdWords\Lib\AdWordsSoapClient;

/**
   * BiddingStrategyService
   * @package Google_Api_Ads_AdWords_v201603
   * @subpackage v201603
   */
class BiddingStrategyService extends AdWordsSoapClient
{
    const SERVICE_NAME = 'BiddingStrategyService';
    const WSDL_NAMESPACE = 'https://adwords.google.com/api/adwords/cm/v201603';
    const ENDPOINT = 'https://adwords.google.com/api/adwords/cm/v201603/BiddingStrategyService';
    /**
     * The endpoint of the service
     * @var string
     */
    public static $endpoint = 'https://adwords.google.com/api/adwords/cm/v201603/BiddingStrategyService';
    /**
     * Default class map for wsdl=>php
     * @access private
     * @var array
     */
    public static $classmap = [
        'AdxError' => AdxError::class,
        'AuthenticationError' => AuthenticationError::class,
        'AuthorizationError' => AuthorizationError::class,
        'BiddingErrors' => BiddingErrors::class,
        'BiddingStrategyError' => BiddingStrategyError::class,
        'ClientTermsError' => ClientTermsError::class,
        'ConversionOptimizerBiddingScheme' => ConversionOptimizerBiddingScheme::class,
        'DateError' => DateError::class,
        'DateRange' => DateRange::class,
        'DistinctError' => DistinctError::class,
        'DoubleValue' => DoubleValue::class,
        'EnhancedCpcBiddingScheme' => EnhancedCpcBiddingScheme::class,
        'EntityCountLimitExceeded' => EntityCountLimitExceeded::class,
        'EntityNotFound' => EntityNotFound::class,
        'IdError' => IdError::class,
        'InternalApiError' => InternalApiError::class,
        'LongValue' => LongValue::class,
        'ManualCpcBiddingScheme' => ManualCpcBiddingScheme::class,
        'ManualCpmBiddingScheme' => ManualCpmBiddingScheme::class,
        'Money' => Money::class,
        'NewEntityCreationError' => NewEntityCreationError::class,
        'NotEmptyError' => NotEmptyError::class,
        'NullError' => NullError::class,
        'NumberValue' => NumberValue::class,
        'OperationAccessDenied' => OperationAccessDenied::class,
        'OperatorError' => OperatorError::class,
        'OrderBy' => OrderBy::class,
        'Paging' => Paging::class,
        'Predicate' => Predicate::class,
        'QueryError' => QueryError::class,
        'QuotaCheckError' => QuotaCheckError::class,
        'RangeError' => RangeError::class,
        'RateExceededError' => RateExceededError::class,
        'ReadOnlyError' => ReadOnlyError::class,
        'RejectedError' => RejectedError::class,
        'RequestError' => RequestError::class,
        'RequiredError' => RequiredError::class,
        'SelectorError' => SelectorError::class,
        'SizeLimitError' => SizeLimitError::class,
        'SoapHeader' => SoapRequestHeader::class,
        'SoapResponseHeader' => SoapResponseHeader::class,
        'StringLengthError' => StringLengthError::class,
        'ComparableValue' => ComparableValue::class,
        'DatabaseError' => DatabaseError::class,
        'PageOnePromotedBiddingScheme' => PageOnePromotedBiddingScheme::class,
        'TargetCpaBiddingScheme' => TargetCpaBiddingScheme::class,
        'TargetOutrankShareBiddingScheme' => TargetOutrankShareBiddingScheme::class,
        'TargetRoasBiddingScheme' => TargetRoasBiddingScheme::class,
        'TargetSpendBiddingScheme' => TargetSpendBiddingScheme::class,
        'ApiError' => ApiError::class,
        'ApiException' => ApiException::class,
        'ApplicationException' => ApplicationException::class,
        'BudgetOptimizerBiddingScheme' => BudgetOptimizerBiddingScheme::class,
        'Selector' => Selector::class,
        'BiddingScheme' => BiddingScheme::class,
        'SharedBiddingStrategy' => SharedBiddingStrategy::class,
        'BiddingStrategyOperation' => BiddingStrategyOperation::class,
        'BiddingStrategyPage' => BiddingStrategyPage::class,
        'BiddingStrategyReturnValue' => BiddingStrategyReturnValue::class,
        'ListReturnValue' => ListReturnValue::class,
        'Operation' => Operation::class,
        'Page' => Page::class,
        'AdxError.Reason' => AdxErrorReason::class,
        'AuthenticationError.Reason' => AuthenticationErrorReason::class,
        'AuthorizationError.Reason' => AuthorizationErrorReason::class,
        'BiddingErrors.Reason' => BiddingErrorsReason::class,
        'SharedBiddingStrategy.BiddingStrategyStatus' => SharedBiddingStrategyBiddingStrategyStatus::class,
        'BiddingStrategyError.Reason' => BiddingStrategyErrorReason::class,
        'BiddingStrategyType' => BiddingStrategyType::class,
        'ClientTermsError.Reason' => ClientTermsErrorReason::class,
        'ConversionOptimizerBiddingScheme.BidType' => ConversionOptimizerBiddingSchemeBidType::class,
        'ConversionOptimizerBiddingScheme.PricingMode' => ConversionOptimizerBiddingSchemePricingMode::class,
        'DatabaseError.Reason' => DatabaseErrorReason::class,
        'DateError.Reason' => DateErrorReason::class,
        'DistinctError.Reason' => DistinctErrorReason::class,
        'EntityCountLimitExceeded.Reason' => EntityCountLimitExceededReason::class,
        'EntityNotFound.Reason' => EntityNotFoundReason::class,
        'IdError.Reason' => IdErrorReason::class,
        'InternalApiError.Reason' => InternalApiErrorReason::class,
        'NewEntityCreationError.Reason' => NewEntityCreationErrorReason::class,
        'NotEmptyError.Reason' => NotEmptyErrorReason::class,
        'NullError.Reason' => NullErrorReason::class,
        'OperationAccessDenied.Reason' => OperationAccessDeniedReason::class,
        'Operator' => Operator::class,
        'OperatorError.Reason' => OperatorErrorReason::class,
        'PageOnePromotedBiddingScheme.StrategyGoal' => PageOnePromotedBiddingSchemeStrategyGoal::class,
        'Predicate.Operator' => PredicateOperator::class,
        'QueryError.Reason' => QueryErrorReason::class,
        'QuotaCheckError.Reason' => QuotaCheckErrorReason::class,
        'RangeError.Reason' => RangeErrorReason::class,
        'RateExceededError.Reason' => RateExceededErrorReason::class,
        'ReadOnlyError.Reason' => ReadOnlyErrorReason::class,
        'RejectedError.Reason' => RejectedErrorReason::class,
        'RequestError.Reason' => RequestErrorReason::class,
        'RequiredError.Reason' => RequiredErrorReason::class,
        'SelectorError.Reason' => SelectorErrorReason::class,
        'SizeLimitError.Reason' => SizeLimitErrorReason::class,
        'SortOrder' => SortOrder::class,
        'StringLengthError.Reason' => StringLengthErrorReason::class,
        'get' => BiddingStrategyServiceGet::class,
        'getResponse' => BiddingStrategyServiceGetResponse::class,
        'mutate' => BiddingStrategyServiceMutate::class,
        'mutateResponse' => BiddingStrategyServiceMutateResponse::class,
        'query' => Query::class,
        'queryResponse' => QueryResponse::class,
    ];

    /**
     * Constructor using wsdl location and options array
     * @param string $wsdl WSDL location for this service
     * @param array $options Options for the SoapClient
     */
    public function __construct($wsdl, $options, $user)
    {
        $options['classmap'] = self::$classmap;
        parent::__construct($wsdl, $options, $user, self::SERVICE_NAME, self::WSDL_NAMESPACE);
    }
    /**
     * <span class="constraint Required">This field is required and should not be {@code null}.</span>
     * 
     * 
     * 
     * Returns a list of bidding strategies that match the selector.
     * 
     * @return list of bidding strategies specified by the selector.
     * @throws com.google.ads.api.services.common.error.ApiException if problems
     * occurred while retrieving results.
     */
    public function get($selector)
    {
        $args = new BiddingStrategyServiceGet($selector);
        $result = $this->__soapCall('get', array($args));
        return $result->rval;
    }
    /**
     * <span class="constraint ContentsNotNull">This field must not contain {@code null} elements.</span>
     * <span class="constraint DistinctIds">Elements in this field must have distinct IDs for following {@link Operator}s : ADD, SET, REMOVE.</span>
     * <span class="constraint NotEmpty">This field must contain at least one element.</span>
     * <span class="constraint Required">This field is required and should not be {@code null}.</span>
     * 
     * 
     * 
     * Applies the list of mutate operations.
     * 
     * @param operations the operations to apply
     * @return the modified list of BiddingStrategy
     * @throws ApiException
     */
    public function mutate($operations)
    {
        $args = new BiddingStrategyServiceMutate($operations);
        $result = $this->__soapCall('mutate', array($args));
        return $result->rval;
    }
    /**
     * <span class="constraint Required">This field is required and should not be {@code null}.</span>
     * 
     * 
     * 
     * Returns a list of bidding strategies that match the query.
     * 
     * @param query The SQL-like AWQL query string.
     * @throws ApiException when there are one or more errors with the request.
     */
    public function query($query)
    {
        $args = new Query($query);
        $result = $this->__soapCall('query', array($args));
        return $result->rval;
    }
}
