<?php
/*
 * File generated by ClassyFile <https://github.com/onema/classyfile>
 * (c) 2016, Juan Manuel Torres
 *
 * For the full copyright and license information,
 * please view the LICENSE file that was distributed
 * with this source code.
 */
namespace Google\Api\Ads\AdWords\v201603;
use Google\Api\Ads\AdWords\Lib\AdWordsSoapClient;

/**
   * CustomerService
   * @package Google_Api_Ads_AdWords_v201603
   * @subpackage v201603
   */
class CustomerService extends AdWordsSoapClient
{
    const SERVICE_NAME = 'CustomerService';
    const WSDL_NAMESPACE = 'https://adwords.google.com/api/adwords/mcm/v201603';
    const ENDPOINT = 'https://adwords.google.com/api/adwords/mcm/v201603/CustomerService';
    /**
     * The endpoint of the service
     * @var string
     */
    public static $endpoint = 'https://adwords.google.com/api/adwords/mcm/v201603/CustomerService';
    /**
     * Default class map for wsdl=>php
     * @access private
     * @var array
     */
    public static $classmap = [
        'AuthenticationError' => AuthenticationError::class,
        'AuthorizationError' => AuthorizationError::class,
        'ClientTermsError' => ClientTermsError::class,
        'DistinctError' => DistinctError::class,
        'IdError' => IdError::class,
        'InternalApiError' => InternalApiError::class,
        'NotEmptyError' => NotEmptyError::class,
        'NullError' => NullError::class,
        'OperationAccessDenied' => OperationAccessDenied::class,
        'OperatorError' => OperatorError::class,
        'QuotaCheckError' => QuotaCheckError::class,
        'RangeError' => RangeError::class,
        'RateExceededError' => RateExceededError::class,
        'ReadOnlyError' => ReadOnlyError::class,
        'RejectedError' => RejectedError::class,
        'RequestError' => RequestError::class,
        'RequiredError' => RequiredError::class,
        'SizeLimitError' => SizeLimitError::class,
        'SoapHeader' => SoapRequestHeader::class,
        'SoapResponseHeader' => SoapResponseHeader::class,
        'StringLengthError' => StringLengthError::class,
        'UrlError' => UrlError::class,
        'DatabaseError' => DatabaseError::class,
        'ApiError' => ApiError::class,
        'ApiException' => ApiException::class,
        'ApplicationException' => ApplicationException::class,
        'AuthenticationError.Reason' => AuthenticationErrorReason::class,
        'AuthorizationError.Reason' => AuthorizationErrorReason::class,
        'ClientTermsError.Reason' => ClientTermsErrorReason::class,
        'ConversionDeduplicationMode' => ConversionDeduplicationMode::class,
        'DatabaseError.Reason' => DatabaseErrorReason::class,
        'DistinctError.Reason' => DistinctErrorReason::class,
        'IdError.Reason' => IdErrorReason::class,
        'InternalApiError.Reason' => InternalApiErrorReason::class,
        'NotEmptyError.Reason' => NotEmptyErrorReason::class,
        'NullError.Reason' => NullErrorReason::class,
        'OperationAccessDenied.Reason' => OperationAccessDeniedReason::class,
        'OperatorError.Reason' => OperatorErrorReason::class,
        'QuotaCheckError.Reason' => QuotaCheckErrorReason::class,
        'RangeError.Reason' => RangeErrorReason::class,
        'RateExceededError.Reason' => RateExceededErrorReason::class,
        'ReadOnlyError.Reason' => ReadOnlyErrorReason::class,
        'RejectedError.Reason' => RejectedErrorReason::class,
        'RequestError.Reason' => RequestErrorReason::class,
        'RequiredError.Reason' => RequiredErrorReason::class,
        'SizeLimitError.Reason' => SizeLimitErrorReason::class,
        'StringLengthError.Reason' => StringLengthErrorReason::class,
        'UrlError.Reason' => UrlErrorReason::class,
        'ConversionTrackingSettings' => ConversionTrackingSettings::class,
        'CustomerError' => CustomerError::class,
        'RemarketingSettings' => RemarketingSettings::class,
        'Customer' => Customer::class,
        'CustomerError.Reason' => CustomerErrorReason::class,
        'get' => CustomerServiceGet::class,
        'getResponse' => CustomerServiceGetResponse::class,
        'getCustomers' => GetCustomers::class,
        'getCustomersResponse' => GetCustomersResponse::class,
        'mutate' => CustomerServiceMutate::class,
        'mutateResponse' => CustomerServiceMutateResponse::class,
    ];

    /**
     * Constructor using wsdl location and options array
     * @param string $wsdl WSDL location for this service
     * @param array $options Options for the SoapClient
     */
    public function __construct($wsdl, $options, $user)
    {
        $options['classmap'] = self::$classmap;
        parent::__construct($wsdl, $options, $user, self::SERVICE_NAME, self::WSDL_NAMESPACE);
    }
    /**
     * Returns details of the authorized customer.
     * 
     * @return customer associated with the caller
     */
    public function get()
    {
        $args = new CustomerServiceGet();
        $result = $this->__soapCall('get', array($args));
        return $result->rval;
    }
    /**
     * Returns details of all the customers directly accessible by the user authenticating the call.
     * Callers are discouraged from setting the {@code clientCustomerId} header field in calls to
     * {@link CustomerService#getCustomers()}, as its value is ignored by this method, and its
     * presence will trigger an authorization error if the caller does not have access to the
     * customer with the included ID.
     */
    public function getCustomers()
    {
        $args = new GetCustomers();
        $result = $this->__soapCall('getCustomers', array($args));
        return $result->rval;
    }
    /**
     * <span class="constraint Required">This field is required and should not be {@code null}.</span>
     * 
     * 
     * 
     * Update the authorized customer.
     * 
     * <p>While there are a limited set of properties available to update, please read this
     * <a href="https://support.google.com/analytics/answer/1033981">help center article
     * on auto-tagging</a> before updating {@code customer.autoTaggingEnabled}.
     * 
     * @param customer the requested updated value for the customer.
     * @throws ApiException
     */
    public function mutate($customer)
    {
        $args = new CustomerServiceMutate($customer);
        $result = $this->__soapCall('mutate', array($args));
        return $result->rval;
    }
}
