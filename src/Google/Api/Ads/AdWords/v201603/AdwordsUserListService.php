<?php
/*
 * File generated by ClassyFile <https://github.com/onema/classyfile>
 * (c) 2016, Juan Manuel Torres
 *
 * For the full copyright and license information,
 * please view the LICENSE file that was distributed
 * with this source code.
 */
namespace Google\Api\Ads\AdWords\v201603;
use Google\Api\Ads\AdWords\Lib\AdWordsSoapClient;

/**
   * AdwordsUserListService
   * @package Google_Api_Ads_AdWords_v201603
   * @subpackage v201603
   */
class AdwordsUserListService extends AdWordsSoapClient
{
    const SERVICE_NAME = 'AdwordsUserListService';
    const WSDL_NAMESPACE = 'https://adwords.google.com/api/adwords/rm/v201603';
    const ENDPOINT = 'https://adwords.google.com/api/adwords/rm/v201603/AdwordsUserListService';
    /**
     * The endpoint of the service
     * @var string
     */
    public static $endpoint = 'https://adwords.google.com/api/adwords/rm/v201603/AdwordsUserListService';
    /**
     * Default class map for wsdl=>php
     * @access private
     * @var array
     */
    public static $classmap = [
        'AuthenticationError' => AuthenticationError::class,
        'AuthorizationError' => AuthorizationError::class,
        'DateError' => DateError::class,
        'DateRange' => DateRange::class,
        'DistinctError' => DistinctError::class,
        'EntityNotFound' => EntityNotFound::class,
        'InternalApiError' => InternalApiError::class,
        'NotEmptyError' => NotEmptyError::class,
        'NotWhitelistedError' => NotWhitelistedError::class,
        'NullError' => NullError::class,
        'OperationAccessDenied' => OperationAccessDenied::class,
        'OperatorError' => OperatorError::class,
        'OrderBy' => OrderBy::class,
        'Paging' => Paging::class,
        'Predicate' => Predicate::class,
        'QueryError' => QueryError::class,
        'QuotaCheckError' => QuotaCheckError::class,
        'RangeError' => RangeError::class,
        'RateExceededError' => RateExceededError::class,
        'ReadOnlyError' => ReadOnlyError::class,
        'RejectedError' => RejectedError::class,
        'RequiredError' => RequiredError::class,
        'SelectorError' => SelectorError::class,
        'SizeLimitError' => SizeLimitError::class,
        'SoapHeader' => SoapRequestHeader::class,
        'SoapResponseHeader' => SoapResponseHeader::class,
        'StringFormatError' => StringFormatError::class,
        'StringLengthError' => StringLengthError::class,
        'DatabaseError' => DatabaseError::class,
        'ApiError' => ApiError::class,
        'ApiException' => ApiException::class,
        'ApplicationException' => ApplicationException::class,
        'Selector' => Selector::class,
        'ListReturnValue' => ListReturnValue::class,
        'Operation' => Operation::class,
        'Page' => Page::class,
        'AuthenticationError.Reason' => AuthenticationErrorReason::class,
        'AuthorizationError.Reason' => AuthorizationErrorReason::class,
        'DatabaseError.Reason' => DatabaseErrorReason::class,
        'DateError.Reason' => DateErrorReason::class,
        'DistinctError.Reason' => DistinctErrorReason::class,
        'EntityNotFound.Reason' => EntityNotFoundReason::class,
        'InternalApiError.Reason' => InternalApiErrorReason::class,
        'NotEmptyError.Reason' => NotEmptyErrorReason::class,
        'NotWhitelistedError.Reason' => NotWhitelistedErrorReason::class,
        'NullError.Reason' => NullErrorReason::class,
        'OperationAccessDenied.Reason' => OperationAccessDeniedReason::class,
        'Operator' => Operator::class,
        'OperatorError.Reason' => OperatorErrorReason::class,
        'Predicate.Operator' => PredicateOperator::class,
        'QueryError.Reason' => QueryErrorReason::class,
        'QuotaCheckError.Reason' => QuotaCheckErrorReason::class,
        'RangeError.Reason' => RangeErrorReason::class,
        'RateExceededError.Reason' => RateExceededErrorReason::class,
        'ReadOnlyError.Reason' => ReadOnlyErrorReason::class,
        'RejectedError.Reason' => RejectedErrorReason::class,
        'RequiredError.Reason' => RequiredErrorReason::class,
        'SelectorError.Reason' => SelectorErrorReason::class,
        'SizeLimitError.Reason' => SizeLimitErrorReason::class,
        'SortOrder' => SortOrder::class,
        'StringFormatError.Reason' => StringFormatErrorReason::class,
        'StringLengthError.Reason' => StringLengthErrorReason::class,
        'CollectionSizeError' => CollectionSizeError::class,
        'UserListConversionType' => UserListConversionType::class,
        'CrmBasedUserList' => CrmBasedUserList::class,
        'DateKey' => DateKey::class,
        'DateRuleItem' => DateRuleItem::class,
        'DateSpecificRuleUserList' => DateSpecificRuleUserList::class,
        'ExpressionRuleUserList' => ExpressionRuleUserList::class,
        'LogicalUserList' => LogicalUserList::class,
        'LogicalUserListOperand' => LogicalUserListOperand::class,
        'MutateMembersError' => MutateMembersError::class,
        'MutateMembersOperand' => MutateMembersOperand::class,
        'MutateMembersOperation' => MutateMembersOperation::class,
        'MutateMembersReturnValue' => MutateMembersReturnValue::class,
        'NumberKey' => NumberKey::class,
        'NumberRuleItem' => NumberRuleItem::class,
        'BasicUserList' => BasicUserList::class,
        'Rule' => Rule::class,
        'RuleBasedUserList' => RuleBasedUserList::class,
        'RuleItem' => RuleItem::class,
        'RuleItemGroup' => RuleItemGroup::class,
        'SimilarUserList' => SimilarUserList::class,
        'StringKey' => StringKey::class,
        'StringRuleItem' => StringRuleItem::class,
        'UserList' => UserList::class,
        'UserListError' => UserListError::class,
        'UserListLogicalRule' => UserListLogicalRule::class,
        'UserListOperation' => UserListOperation::class,
        'UserListPage' => UserListPage::class,
        'UserListReturnValue' => UserListReturnValue::class,
        'AccessReason' => AccessReason::class,
        'AccountUserListStatus' => AccountUserListStatus::class,
        'CollectionSizeError.Reason' => CollectionSizeErrorReason::class,
        'UserListConversionType.Category' => UserListConversionTypeCategory::class,
        'DateRuleItem.DateOperator' => DateRuleItemDateOperator::class,
        'MutateMembersError.Reason' => MutateMembersErrorReason::class,
        'MutateMembersOperand.DataType' => MutateMembersOperandDataType::class,
        'NumberRuleItem.NumberOperator' => NumberRuleItemNumberOperator::class,
        'SizeRange' => SizeRange::class,
        'StringRuleItem.StringOperator' => StringRuleItemStringOperator::class,
        'UserListError.Reason' => UserListErrorReason::class,
        'UserListLogicalRule.Operator' => UserListLogicalRuleOperator::class,
        'UserListMembershipStatus' => UserListMembershipStatus::class,
        'UserListType' => UserListType::class,
        'get' => AdwordsUserListServiceGet::class,
        'getResponse' => AdwordsUserListServiceGetResponse::class,
        'mutate' => AdwordsUserListServiceMutate::class,
        'mutateResponse' => AdwordsUserListServiceMutateResponse::class,
        'mutateMembers' => MutateMembers::class,
        'mutateMembersResponse' => MutateMembersResponse::class,
        'query' => Query::class,
        'queryResponse' => QueryResponse::class,
    ];
    /**
     * Constructor using wsdl location and options array
     * @param string $wsdl WSDL location for this service
     * @param array $options Options for the SoapClient
     */
    public function __construct($wsdl, $options, $user)
    {
        $options['classmap'] = self::$classmap;
        parent::__construct($wsdl, $options, $user, self::SERVICE_NAME, self::WSDL_NAMESPACE);
    }
    /**
     * <span class="constraint Required">This field is required and should not be {@code null}.</span>
     * 
     * 
     * 
     * Returns the list of user lists that meet the selector criteria.
     * 
     * @param serviceSelector the selector specifying the {@link UserList}s to return.
     * @return a list of UserList entities which meet the selector criteria.
     * @throws ApiException if problems occurred while fetching UserList information.
     */
    public function get($serviceSelector)
    {
        $args = new AdwordsUserListServiceGet($serviceSelector);
        $result = $this->__soapCall('get', array($args));
        return $result->rval;
    }
    /**
     * <span class="constraint CollectionSize">The minimum size of this collection is 1. The maximum size of this collection is 10000.</span>
     * <span class="constraint ContentsNotNull">This field must not contain {@code null} elements.</span>
     * <span class="constraint Required">This field is required and should not be {@code null}.</span>
     * <span class="constraint SupportedOperators">The following {@link Operator}s are supported: ADD, SET.</span>
     * 
     * 
     * 
     * Applies a list of mutate operations (i.e. add, set):
     * 
     * Add - creates a set of user lists
     * Set - updates a set of user lists
     * Remove - not supported
     * 
     * @param operations the operations to apply
     * @return a list of UserList objects
     */
    public function mutate($operations)
    {
        $args = new AdwordsUserListServiceMutate($operations);
        $result = $this->__soapCall('mutate', array($args));
        return $result->rval;
    }
    /**
     * <span class="constraint CollectionSize">The minimum size of this collection is 1. The maximum size of this collection is 10000.</span>
     * <span class="constraint ContentsNotNull">This field must not contain {@code null} elements.</span>
     * <span class="constraint Required">This field is required and should not be {@code null}.</span>
     * <span class="constraint SupportedOperators">The following {@link Operator}s are supported: ADD, REMOVE.</span>
     * 
     * 
     * 
     * Mutate members of user lists by either adding or removing their lists of members.
     * 
     * <p>Note that operations cannot have same user list id but different operators.
     * 
     * @param operations the mutate members operations to apply
     * @return a list of UserList objects
     * @throws ApiException when there are one or more errors with the request
     */
    public function mutateMembers($operations)
    {
        $args = new MutateMembers($operations);
        $result = $this->__soapCall('mutateMembers', array($args));
        return $result->rval;
    }
    /**
     * <span class="constraint Required">This field is required and should not be {@code null}.</span>
     * 
     * 
     * 
     * Returns the list of user lists that match the query.
     * 
     * @param query The SQL-like AWQL query string
     * @return A list of UserList
     * @throws ApiException when the query is invalid or there are errors processing the request.
     */
    public function query($query)
    {
        $args = new Query($query);
        $result = $this->__soapCall('query', array($args));
        return $result->rval;
    }
}
